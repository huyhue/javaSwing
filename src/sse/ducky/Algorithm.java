/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sse.ducky;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class Algorithm extends javax.swing.JFrame {

    private final String INSERTION = "Insertion Sort";
    private final String HEAP = "Heap Sort";
    private final String MERGE = "Merge Sort";
    private final String QUICK = "Quick Sort";
    private final String QUICK_INSERTION = "Quick Insertion Sort";
    private int size;
    private String algorithm;
    private int orderAlgorithm;
    private int[] array;
    
//    create new form Algorithm  
    public Algorithm() {
        initComponents();
        algorithm ="INSERTION";
        size = 10;
        orderAlgorithm = 0;
        showRetSize();
        createSet(size);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lbThreshold = new javax.swing.JLabel();
        cbSetSize = new javax.swing.JComboBox<>();
        cbAlgorithm = new javax.swing.JComboBox<>();
        tfThreshold = new javax.swing.JTextField();
        btnExecute = new javax.swing.JButton();
        lbSizeSet = new javax.swing.JLabel();
        lbInsertionSort = new javax.swing.JLabel();
        lbMergeSort = new javax.swing.JLabel();
        lbQuickSort = new javax.swing.JLabel();
        lbQuickInsertionSort = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Set Size");

        jLabel2.setText("Algorithm");

        lbThreshold.setText("Threshold");
        lbThreshold.setEnabled(false);

        cbSetSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10", "50", "100", "500", "1000", "5000", "10000", "500000", "1000000", "50000000", "100000000", "1500000000", "2000000000" }));
        cbSetSize.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSetSizeItemStateChanged(evt);
            }
        });

        cbAlgorithm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Insertion Sort", "Merge Sort", "Quick Sort", "Quick Insertion Sort", " " }));
        cbAlgorithm.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbAlgorithmItemStateChanged(evt);
            }
        });

        tfThreshold.setEnabled(false);

        btnExecute.setText("Execute");
        btnExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteActionPerformed(evt);
            }
        });

        lbSizeSet.setText("jLabel4");

        lbInsertionSort.setText("jLabel5");

        lbMergeSort.setText("jLabel6");

        lbQuickSort.setText("jLabel7");

        lbQuickInsertionSort.setText("jLabel8");

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 0));
        jLabel4.setText("The sample program to illustrate the sorting algorithm");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(lbThreshold))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbSetSize, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(btnExecute))
                    .addComponent(tfThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbSizeSet, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbQuickInsertionSort, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lbInsertionSort, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                .addComponent(lbMergeSort, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbQuickSort, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(84, 84, 84)))
                .addGap(90, 90, 90))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbAlgorithm, cbSetSize});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, lbThreshold});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbSetSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExecute))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbThreshold)
                    .addComponent(tfThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(lbSizeSet)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbInsertionSort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbMergeSort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbQuickSort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbQuickInsertionSort)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbAlgorithmItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbAlgorithmItemStateChanged
        // TODO add your handling code here:
        algorithm = (String)cbAlgorithm.getSelectedItem();
        orderAlgorithm = cbAlgorithm.getSelectedIndex();
        if(cbAlgorithm.getSelectedIndex() == 3){
            lbThreshold.setEnabled(true);
            tfThreshold.setEnabled(true);
        }else{
            lbThreshold.setEnabled(false);
            tfThreshold.setEnabled(false);
        }
    }//GEN-LAST:event_cbAlgorithmItemStateChanged

    private void btnExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuteActionPerformed
        // TODO add your handling code here:
        try {
            SortingAlgorithms sortAlgorithm = new SortingAlgorithms(array);
            switch(orderAlgorithm){
                case 0:
                    showResult(lbInsertionSort, algorithm, sortAlgorithm.insertionSort());
                    break;
                case 1:
                    showResult(lbMergeSort, algorithm, sortAlgorithm.mergeSort());
                    break;
                case 2:
                    showResult(lbQuickSort, algorithm, sortAlgorithm.quickSort());
                    break;
                case 3:
                    try {
                        int threshold = Integer.parseInt(tfThreshold.getText());
                        sortAlgorithm.setThreshold(threshold);
                        showResult(lbQuickInsertionSort, algorithm, sortAlgorithm.quickInsertionSort());
                } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Wrong format for threshold!","Error",JOptionPane.ERROR_MESSAGE);
                }
                    break;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "This is an error: " +e.toString(),"Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExecuteActionPerformed

    private void cbSetSizeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSetSizeItemStateChanged
        // TODO add your handling code here:
        size = Integer.parseInt((String) this.cbSetSize.getSelectedItem());
        createSet(size);
        showRetSize();
        
        resetResult(lbInsertionSort, INSERTION);
        resetResult(lbMergeSort, MERGE);
        resetResult(lbQuickSort, QUICK);
        resetResult(lbQuickInsertionSort, QUICK_INSERTION);
    }//GEN-LAST:event_cbSetSizeItemStateChanged

    private void showRetSize(){
        lbSizeSet.setText("The size of the set is "+size);
    }
    private void showResult(JLabel label, String algorithm, String duration){
        label.setText("The time of the "+algorithm+" Algorithm is "+duration);
    }
    private void resetResult(JLabel label, String algorithm){
        showResult(label, algorithm,"0 ms");
    }
    private void createSet(int size){
        array = new int[size];
        for (int i = 0; i < array.length; i++) {
             array[i] = (int) (Math.random()* array.length * array.length);
            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Algorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Algorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Algorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Algorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Algorithm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExecute;
    private javax.swing.JComboBox<String> cbAlgorithm;
    private javax.swing.JComboBox<String> cbSetSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lbInsertionSort;
    private javax.swing.JLabel lbMergeSort;
    private javax.swing.JLabel lbQuickInsertionSort;
    private javax.swing.JLabel lbQuickSort;
    private javax.swing.JLabel lbSizeSet;
    private javax.swing.JLabel lbThreshold;
    private javax.swing.JTextField tfThreshold;
    // End of variables declaration//GEN-END:variables
}
